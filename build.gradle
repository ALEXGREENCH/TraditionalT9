buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:0.7.+'
	}
}
apply plugin: 'android'

ext {
	keyStorePass = ''
	keyPass = ''
}

dependencies {
	compile fileTree(dir: 'libs', include: '*.jar')
}

android {
	compileSdkVersion 10
	buildToolsVersion "19.0.0"

	sourceSets {
		main {
			manifest.srcFile 'AndroidManifest.xml'
			java.srcDirs = ['src']
			resources.srcDirs = ['src']
			aidl.srcDirs = ['src']
			renderscript.srcDirs = ['src']
			res.srcDirs = ['res']
			assets.srcDirs = ['assets']
		}

		// Move the tests to tests/java, tests/res, etc...
		instrumentTest.setRoot('tests')

		// Move the build types to build-types/<type>
		// For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
		// This moves them out of them default location under src/<type>/... which would
		// conflict with src/ being used by the main source set.
		// Adding new build types or product flavors should be accompanied
		// by a similar customization.
		debug.setRoot('build-types/debug')
		release.setRoot('build-types/release')

	}
	// http://stackoverflow.com/a/19130098
	signingConfigs {
		release {
			storeFile file(System.getenv("KEYSTORE"))
			storePassword project.ext.keyStorePass
			keyAlias System.getenv("KEYALIAS")
			keyPassword project.ext.keyPass
		}
	}

	buildTypes {
		release {
			signingConfig android.signingConfigs.release
		}
	}
}


task getDictSizes {
	inputs.files 'assets/en-utf8.txt', 'assets/ru-utf8.txt'
	outputs.file "assets/dict.properties"
	doLast {
		ant.echo("Deleting old file...")

		delete 'assets/dict.properties'

		ant.echo("Calculating dict size...")

		FileCollection dicts = files("assets/en-utf8.txt", "assets/ru-utf8.txt")

		dicts.each {File file ->
			ant.propertyfile(file:"assets/dict.properties") {
				entry(key: "size."+ file.name, value: file.length())
			}
		}
	}
}

task readPasswordFromInput << {
	android.signingConfigs.release.storePassword = String.valueOf(System.console().readPassword("\nKeyStore Password: "))
	android.signingConfigs.release.keyPassword =  String.valueOf(System.console().readPassword("\nKey Password: "))
}

//http://stackoverflow.com/a/17484331
tasks.whenTaskAdded { task ->
	if (task.name == 'packageRelease') {
		task.dependsOn readPasswordFromInput
	}
}

preBuild.dependsOn getDictSizes
preBuild.mustRunAfter getDictSizes
